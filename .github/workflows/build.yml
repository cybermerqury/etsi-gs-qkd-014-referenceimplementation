name: Build

on:
  push:
    branches: [ "pushing-image-to-registry" ]
  pull_request:
    branches: [ "main" ]

permissions:
  packages: write  # Grant write permission to publish packages
  contents: read   # Grant read permission for repository content

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Check cargo version
        run: | 
          curl --proto '=https' --tlsv1.3 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain=1.80.1 -y
          cargo install cargo-audit
          cargo --version
      # - name: Check for vulnerabilities
      #   run: cargo audit
      - name: Build
        run: SQLX_OFFLINE=true cargo build --locked --release
      - name: Run tests
        run: SQLX_OFFLINE=true cargo test --verbose
      - name: check files
        run: pwd && ls
      - name: Checking docker file
        run: docker build --check . --file Dockerfile
      - name: Build and push image
        run:
          docker login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker build . --tag ghcr.io/${{ github.actor }}/app:latest
          docker push ghcr.io/${{ github.actor }}/app:latest
  # docker-push:
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
      # - name: Log in to the Container registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }} ## This needs a GH token on our environment
      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     push: true
      #     tags: user/app:latest 
# Think about how we need to push tagging
# If we want automatic tagging
# Else we trigger it on the git tag push origin
